name: Build SpringBoot App PushOrCreateEvent with Cache

on:
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]
  create:
    tags:
      - "V*"

jobs:
  compile:
    runs-on: ubuntu-latest
    env:
      JAR_NAME: zeabur-app
      TAG: V0.1.0
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
#          distribution: 'adopt'

      - name: Set environment variables from pom.xml
#        id: set_project_name
#        env:
#          PROJECT_NAME: ${{steps.set_project_name.outputs.project_name}}
#          PROJECT_VERSION: ${{steps.set_project_version.outputs.project_version}}
        run: |
#          artifactId=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)
#          echo "PROJECT_NAME=$artifactId" >> $GITHUB_ENV
#          version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
#          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV
          echo "PROJECT_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      #  maven缓存，不加的话每次都会去重新拉取，会影响速度
      - name: Dependies Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #  编译打包
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true
#        run: mvn -B package --file pom.xml

      - name: Upload files
        # arg info: https://github.com/ncipollo/release-action#release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "target/*.jar"
          tag: ${{ env.TAG }}
          token: ${{ secrets.GACTION_TOKEN }}


      - name: Send Feishu Message
        run: |
          response="$(curl -H "Content-Type: application/json" -X POST -d '{
                "msg_type": "post",
                "content": {
                  "post": {
                    "zh_cn": {
                      "title": "应用${{ env.PROJECT_NAME }} 构建完成",
                      "content": [
                        [
                          {
                            "tag": "text",
                            "un_escape": true,
                            "text": "点击下载 :"
                          },
                          {
                            "tag": "a",
                            "text": "${{ env.PROJECT_NAME }}",
                            "href": "https://github.com/yinzhidong/spring-boot-maven-template/releases/download/V0.1.0/${{ env.PROJECT_NAME }}-${{ env.PROJECT_VERSION }}.jar"
                          },
                          {
                            "tag": "a",
                            "text": "${{ env.PROJECT_NAME }}",
                            "href": "https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG }}"
                          }
                        ],
                        [
                          {
                            "tag": "img",
                            "image_key": "d640eeea-4d2f-4cb3-88d8-c964fab53987",
                            "width": 300,
                            "height": 300
                          }
                        ]
                      ]
                    }
                  }
                }
          }' https://open.feishu.cn/open-apis/bot/v2/hook/${{ secrets.FEI_BOOT }})"
          

      #  登录Docker  Hub
#      - name: Login to  Docker  Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{  secrets.DOCKER_HUB_USERNAME  }}
#          password: ${{  secrets.DOCKER_HUB_ACCESS_TOKEN  }}
#            - name: Set  up  Docker  Buildx
#                id: buildx
#                uses: docker/setup-buildx-action@v1


      #  build  镜像并push到中央仓库中
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/imageName:latest


      #  push后，用ssh连接服务器执行脚本
#      - name: SSH
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            sh  start.sh
#          host: ${{  secrets.HOST  }}
#          user: ${{  secrets.USER  }}
#          key: ${{  secrets.PRIVATE_KEY}}