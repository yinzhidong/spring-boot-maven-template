name: SpringBoot CI CD

on:
  push:
    branches: [ main ]
    tags:
      - "V*"
  pull_request:
    branches: [ main ]
  create:
    tags:
      - "V*"
  workflow_dispatch:
    inputs:
      version:
        description: "tag version"
        required: true
        default: "V0.1.0"
      is_pre_release:
        description: "pre-release or release, if true, is pre-release"
        required: true
        type: boolean
        default: true

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      #  maven缓存，不加的话每次都会去重新拉取，会影响速度
      - name: Dependies Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      #  编译打包
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true

      - name: Upload files
        # arg info: https://github.com/ncipollo/release-action#release-action
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          prerelease: ${{ inputs.is_pre_release }}
          artifacts: "target/*.jar"
          tag: ${{ inputs.version }}
          token: ${{ secrets.GACTION_TOKEN }}

      #  登录Docker  Hub
#      - name: Login to  Docker  Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{  secrets.DOCKER_HUB_USERNAME  }}
#          password: ${{  secrets.DOCKER_HUB_ACCESS_TOKEN  }}
#            - name: Set  up  Docker  Buildx
#                id: buildx
#                uses: docker/setup-buildx-action@v1


      #  build  镜像并push到中央仓库中
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/imageName:latest


      #  push后，用ssh连接服务器执行脚本
#      - name: SSH
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            sh  start.sh
#          host: ${{  secrets.HOST  }}
#          user: ${{  secrets.USER  }}
#          key: ${{  secrets.PRIVATE_KEY}}